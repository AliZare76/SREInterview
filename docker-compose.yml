version: '3.2'

services:
  django:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint: ./entrypoint.sh
    ports:
      - 3000:3000
    environment:
      ALLOWED_HOSTS: '127.0.0.1 localhost 181.41.194.182 sre.demoo.lol django'
      DEBUG: 'True'
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      DJANGO_DB: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: postgres
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_PORT: 5432
    volumes:
      - static_volume:/app/staticfiles

  celery:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint: /app/celery-entrypoint.sh
    environment:
      ALLOWED_HOSTS: '127.0.0.1 localhost 181.41.194.182 sre.demoo.lol'
      DEBUG: 'True'
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      DJANGO_DB: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: postgres
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_PORT: 5432
    depends_on:
      - django
      - redis
    volumes:
      - static_volume:/app/staticfiles
  redis:
    restart: unless-stopped
    image: redis:alpine 
    expose:
      - 6379
  postgres:
    image: postgres:alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - postgres
    ports:
      - "80:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: mohammadalizare1997@gmail.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin

  prometheus:
    image: rancher/prom-prometheus:v2.22.0
    volumes:
      - ./prometheus/:/etc/prometheus/
    ports:
      - "9090:9090"
  # nginx:
  #   restart: always
  #   image: nginx:alpine
  #   ports:
  #     - 443:443
  #   volumes:
  #     - ./nginx/defualt.conf:/etc/nginx/defualt.conf
  #     - static_volume:/app/staticfiles
  #     - ./nginx/keys/ssl_certificate.crt:/etc/nginx/ssl_certificate.crt:ro
  #     - ./nginx/keys/ssl_certificate.key:/etc/nginx/ssl_certificate.key:ro
volumes:
  postgres_data: {}
  static_volume: {}